[["index.html", "Statistics Einführung", " Statistics Benjamin Buchwitz 2025-01-15 Einführung Herzlich Willkommen im Kurs Statistik Woche Thema Slides 1 Grundlagen + Häufigkeit PDF + PDF 2 Maßzahlen PDF 3 Zusammenhang PDF 4 Kombinatorik PDF 5 Wahrscheinlichkeitsrechnung PDF 6 Anwendung der Wsk.Rechnung PDF 7 Verteilungen 1/2 PDF 8 Verteilungen 1/2 PDF 9 Schätzung PDF 10 Hypothesentests PDF 11 Lineare Regression PDF 12 Multiple Regression PDF "],["grundlagen.html", "Kapitel 1 Grundlagen", " Kapitel 1 Grundlagen Figure 1.1: Download Slides "],["begriff-der-häufigkeit.html", "Kapitel 2 Begriff der Häufigkeit", " Kapitel 2 Begriff der Häufigkeit Figure 2.1: Download Slides "],["maßzahlen.html", "Kapitel 3 Maßzahlen", " Kapitel 3 Maßzahlen Figure 3.1: Download Slides "],["zweidimensionale-verteilungen.html", "Kapitel 4 Zweidimensionale Verteilungen", " Kapitel 4 Zweidimensionale Verteilungen Figure 4.1: Download Slides "],["kombinatorik.html", "Kapitel 5 Kombinatorik", " Kapitel 5 Kombinatorik Figure 5.1: Download Slides "],["wahrscheinlichkeitsrechnung.html", "Kapitel 6 Wahrscheinlichkeitsrechnung", " Kapitel 6 Wahrscheinlichkeitsrechnung Figure 6.1: Download Slides "],["anwendungen-der-wahrscheinlichkeitsrechnung.html", "Kapitel 7 Anwendungen der Wahrscheinlichkeitsrechnung", " Kapitel 7 Anwendungen der Wahrscheinlichkeitsrechnung Figure 7.1: Download Slides "],["wahrscheinlichkeitsverteilungen.html", "Kapitel 8 Wahrscheinlichkeitsverteilungen", " Kapitel 8 Wahrscheinlichkeitsverteilungen Figure 8.1: Download Slides "],["spezielle-verteilungen.html", "Kapitel 9 Spezielle Verteilungen", " Kapitel 9 Spezielle Verteilungen Figure 9.1: Download Slides "],["von-der-stichprobe-zur-grundgesamtheit.html", "Kapitel 10 Von der Stichprobe zur Grundgesamtheit", " Kapitel 10 Von der Stichprobe zur Grundgesamtheit Figure 10.1: Download Slides "],["hypothesentests.html", "Kapitel 11 Hypothesentests 11.1 Korrelationskoeffizient (Pearson)", " Kapitel 11 Hypothesentests Figure 11.1: Download Slides 11.1 Korrelationskoeffizient (Pearson) 11.1.1 Theoretische Grundlagen Der empirische Korrelationskoeffizient nach Pearson \\(r_{xy}\\) als Schätzer für den Korrelationskoeffizienten in der Grundgesamtheit \\(\\rho_{xy}\\) ist wie folgt definiert. \\[ r_{xy} = \\frac{s_{xy}}{\\sqrt{s_x^2 s_y^2}} \\] Dabei bezeichnet \\(s_x^2\\) die empirische Varianz der Variable \\(X\\), \\(s_y^2\\) die empirische Varianz der Variable \\(Y\\) und \\(s_{xy}\\) die empirische Kovarianz zwischen den Variablen \\(X\\) und \\(Y\\). Die nachfolgende Tabelle zeigt die Hypothesen und die Testvorschriften für einen rechtssseitigen, linksseitigen und beidseitigen Hypothesentest. Die Nullhypothese \\(H_0: \\rho = 0\\) entspricht der Annahme der stochastischen Unabhängigkeit. Zur Vereinfachung der Notation wird der Korrelationskoeffizient zwischen \\(X\\) und \\(Y\\), in der nachfolgenden Tabelle nur mit \\(\\rho\\) bzw. \\(r\\) bezeichnet. Annahmen: Bivariate Normalverteilung von \\(X\\) und \\(Y\\) in der Grundgesamtheit, \\(n\\leq 30\\). Hypothesen Testvorschrift: Verwerfe \\(H_0\\), wenn gilt: \\(H_0: \\rho = 0\\) vs. \\(H_1: \\rho &gt; 0\\) \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &gt; t_{n-2,1-\\alpha}\\) \\(H_0: \\rho = 0\\) vs. \\(H_1: \\rho &lt; 0\\) \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &lt; -t_{n-2,1-\\alpha}\\) \\(H_0: \\rho = 0\\) vs. \\(H_1: \\rho \\neq 0\\) \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &gt; t_{n-2,1-\\alpha}\\) oder \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &lt; -t_{n-2,1-\\alpha}\\) 11.1.2 Praktische Anwendung Angewendet werden kann der Signifikanztest für den Korrelationskoeffizienten nach Pearson in R mit der Funktion cor.test unter setzen des Arguments method = \"pearson\". Die Festlegung der Richtung des Tests (rechtsseitig, linksseitig, beidseitig) durch Spezifikation der Alternativhypothese \\(H_1\\) erlaubt das Argument alternative. x &lt;- c(44.4, 45.9, 41.9, 53.3, 44.7, 44.1, 50.7, 45.2, 60.1) y &lt;- c( 2.6, 3.1, 2.5, 5.0, 3.6, 4.0, 5.2, 2.8, 3.8) result &lt;- cor.test(x, y, method = &quot;pearson&quot;, alternative = &quot;two.sided&quot;) result ## ## Pearson&#39;s product-moment correlation ## ## data: x and y ## t = 1.8411, df = 7, p-value = 0.1082 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## -0.1497426 0.8955795 ## sample estimates: ## cor ## 0.5711816 Im gezeigten Beispiel wird ein beidseitiger Hypothesentest (alternative = \"two.sided\") für einen fiktiven Datensatz mit \\(n=\\) 9 Beobachtungen durchgeführt. Der berechnete empirische Korrelationskoeffizient beträgt hier \\(r_{xy}=\\) 0.5712. Die berechnete Teststatistik aus einer \\(t\\)-Verteilung mit 7 Freiheitsgerade beträgt 1.841. Die Nullhypothese kann erstmals ab einem Signifikanzniveau von \\(\\alpha^*=\\) 0.1082 verworfen werden. Angenommen der Test wird mit einem Signifikanzniveau von \\(\\alpha = 0.05 = 5\\%\\) durchgeführt, so kann die Nullhypothese \\(H_0\\) nicht verworfen werden. Es liegt keine empirische Evidenz für die Abhängigkeit von \\(X\\) und \\(Y\\) in der Grundgesamtheit vor. Es gilt \\(\\rho_{xy}=0\\), die Variablen \\(X\\) und \\(Y\\) sind voneinander nicht linear abhängig. 11.1.3 Ergänzende Erläuterungen Nachfolgend wird die manuelle Berechnung für die wesentlichen Werte des Hypothesentests nachvollzogen. Die gezeigten Werte sind Deckungsgleich mit den Werten der Funktion cor.test aus dem zuvor gezeigten Beispiel. # Stichprobengröße auslesen n &lt;- length(x) &lt;- length(y) # Teststatistik berechnen r &lt;- cor(x,y) teststat &lt;- (r*sqrt(n-2))/sqrt(1-r^2) # Implizite Irrtumswahrscheinlichkeit berechnen alpha_imp &lt;- 2 * pt(teststat, df = n-2, lower.tail = FALSE) Um die gezeigte Testvorschrift manuell prüfen zu können, wird nach Festlegen der maximalen Irrtumswahrscheinlichkeit \\(\\alpha\\) noch der Vergleichswert der \\(t\\)-Verteilung (rechte Seite der Ungleichungen aus der Tabelle mit den Testvorschriften) benötigt. Die Funktion qt gibt hier die Quantile der \\(t\\)-Verteilung an und übernimmt somit die Aufgabe der Verteilungstabelle. Die Testvorschrift kann also auch hier direkt über die oben gezeigten Ungleichungen als auch über das implizite Signifikanzniveau, dem p-Value \\(\\alpha^*\\), geprüft werden. Beide Vorgehensweisen führen (natürlich) zu einem identischen Ergebnis. # Vergleichsgröße der t-Verteilung bestimmen alpha &lt;- 0.05 tval &lt;- qt(1-alpha/2, df = n-2) # Testentscheidung: H0 verwerfen? # Prüfung mittels Testvorschrift (teststat &gt; tval) | (teststat &lt; -tval) # Testentscheidung: H0 verwerfen? # Prüfung mittels implizitem Signifikanzniveau alpha_imp &lt; alpha "],["lineare-regression.html", "Kapitel 12 Lineare Regression", " Kapitel 12 Lineare Regression Figure 12.1: Download Slides "],["multiple-regression.html", "Kapitel 13 Multiple Regression", " Kapitel 13 Multiple Regression Figure 13.1: Download Slides "],["fhswf-package.html", "Kapitel 14 FHSWF Package 14.1 Installation 14.2 Template 14.3 Nutzung des Templates 14.4 Wissenschaftliches Arbeiten in R Markdown 14.5 Datacamp(-zertifikate)", " Kapitel 14 FHSWF Package Für die Bearbeitung im Rahmen des Kurses steht Ihnen das fhswf Package zur Verfügung. Dieses ergänzt R um einige spezielle Funktionen, stellt weitere Datensätze bereit und installiert Vorlagen (Templates) für Seminar-, Gruppen- und Abschlussarbeiten sowie für Präsentationen. 14.1 Installation Das fhswf Package befindet sich aktuell noch in der Entwicklung und ist daher noch nicht im zentralen offiziellen Package Archiv (CRAN) gelistet. Für die Installation benötigen Sie eine Funktion aus dem Paket remotes, dass einmalig installiert werden muss. Die jeweils neuste fhswf-Paketversion erhalten Sie mit dem folgenden Programmcode. install.packages(&quot;remotes&quot;) # Muss nur einmalig ausgeführt werden remotes::install_github(&quot;bchwtz/fhswf&quot;) # Neueste Paketversion installieren 14.2 Template Nach der Installation des fhswf Packages, müssen Sie die erforderlichen Werkzeuge für die Nutzung des Rmarkdown Templates installieren und initialisieren. Dafür müssen die folgenden Befehle ausgeführt werden. tinytex::install_tinytex() # LaTeX installieren fhswf::install_fhswf() # Fehlende LaTeX Pakete installieren Der Installationsprozess ergänzt eine Vielzahl von LaTeX Komponenten und benötigt je nach Leistung und Auslastung des benutzten Computers etwa 30 Minuten. 14.3 Nutzung des Templates Um das Template fhswf-seminarpaper nutzen zu können, klicken Sie unter File auf New File und dann auf R Markdown.... Anschließend öffnet sich ein Fenster, in dem Sie auf “From Template” klicken und dann sollte dort “FHSWF - Seminarpaper (pdf)” aufgelistet sein (siehe Abbildung 14.1). Dieses Template klicken Sie dann an, geben unter “Name” (siehe Abbildung 14.1) einen Namen für die Rmd-Datei ein, bestätigen dies mit OK und das Template öffnet sich anschließend (es wird ein Ordner mit dem von Ihnen angegebenen Namen erstellt, in dem alle für das Template erforderlichen Dateien abgespeichert sind). Figure 14.1: Aufruf des Templates FHSWF - Seminarpaper (pdf) aus dem R-Paket fhswf (Buchwitz 2022). Verweis auf Quellen und Quellenverzeichnis Um auf die von Ihnen verwendeten Quellen im Text zu verweisen und um diese einschließlich der von Ihnen genutzten R-Pakete im Quellenverzeichnis anzuführen, nutzen Sie das fhswf Seminarpaper Template wie folgt: Indem Sie das Template FHSWF - Seminarpaper verwenden, wird eine Bib-Datei namens references automatisch mitgeladen. In dieser Datei sehen Sie Einträge, die jeweils für beispielhafte Quellen angelegt worden sind, wie z.B.: @ARTICLE{BC64, title = {An analysis of transformations}, author = &quot;Box, George E P and Cox, David R&quot;, journal = &quot;Journal of the Royal Statistical Society. Series B&quot;, volume = 26, number = 2, pages = &quot;211--252&quot;, year = 1964 } Für die von Ihnen genutzten Quellen legen Sie entsprechend einzelne Einträge in references.bib an. Im Text (in R Markdown) verweisen Sie dann auf die verwendeten Quellen mithilfe des @-Symbols wie z.B. @BC64 (BC64 ist eine ID für die entsprechende Quelle, diese ID darf keine Leerzeichen enthalten). Im - basierend auf dem R Markdown-Dokument - generierten PDF-Dokument erscheinen dann entsprechend der/die Autor(en) und das Erscheinungsjahr. Wenn Sie das fhswf-seminarpaper Template öffnen, sind im Abschnitt Using Citations Beispiele zum Thema Zitation gegeben. Sind Ihre Quellen in der Bib-Datei angelegt und haben Sie auf diese im Text verwiesen, wird automatisch ein Literatur- bzw. Quellenverzeichnis erstellt. Möchten Sie Quellen, auf die Sie nicht im Text verweisen, manuell zum Quellenverzeichnis hinzufügen, legen Sie ebenfalls entsprechende Einträge in der Bib-Datei an und rufen diese über “\\nocite{IDderQuelle}” in R Markdown auf. 14.4 Wissenschaftliches Arbeiten in R Markdown Um das wissenschaftliche Arbeiten und Schreiben in R Markdown zu erleichtern, wurde das FHSWF Seminarpaper Template mit Hinweisen zum Thema wissenschaftliche Sprache, zur Erstellung von Tabellen, Abbildungen, Gleichungen, zur Darstellung von Code, zur Zitation etc. gefüllt. Diese können über nachfolgende Links heruntergeladen werden. Description R script R Markdown Datei: FHSWF Template mit Notizen und Hinweisen FHSWF Template mit Hinweisen (.Rmd) PDF Datei: FHSWF Template mit Notizen und Hinweisen FHSWF Template mit Hinweisen (.pdf) bib-Datei des mit Hinweisen versehenen FHSWF Templates references.bib 14.5 Datacamp(-zertifikate) Komfortables Einbetten der Datacamp Zertifikate in das erzeugte PDF erlaubt die Funktion fhswf::include_datacamp(). Dazu müssen die PDF Dokumente in einem Unterorder des Seminararbeits-Projektes abgelegt werden. In der Standardeinstellung nutzt die Funktion fhswf::include_datacamp() einen Ordner mit dem Namen datacamp. Die Dateinamen der Zertifikate und der Dateipfad sollten keine Sonderzeichen enthalten, da dies häufig zu Problemen führt. Auch Leerzeichen im Namen der Zertifikate sollten vermieden werden. Die Funktion fhswf::include_datacamp() benennt die PDF Dateien der Zertifikate (in der Standardeinstellung) automatisch um, sodass bei der Erstellung des Seminarpapers weniger Fehler auftreten. Der nachfolgende Screenshot zeigt den notwendigen Programmcode für die Einbettung der Zertifikate und das daraus resultierende Ergebnis. Dabei werden die PDF Dokumente bewusst in der geringen Größe eingebettet - diese sind detailreich, hereinzoombar und daher für die Korrektoren gut prüfbar. Der Programmcode ist ebenfalls auf der Hilfeseite ?include_datacamp() einsebar. References Buchwitz, Benjamin. 2022. Fhswf: Fhswf. "],["daten.html", "Kapitel 15 Daten 15.1 2024: Guide Michelin 15.2 2024: Flixbus 15.3 2024: Lego 15.4 2023: Bike Sharing 15.5 2023: Yacht Prices 15.6 2023: Insurance 15.7 2022: NYC Airbnb 15.8 2022: Autopreise 15.9 2022: WHO Data 15.10 2021: Taxi Trips 15.11 2021: Hauspreise 15.12 2021: Human Ressources", " Kapitel 15 Daten 15.1 2024: Guide Michelin library(fhswf) # Laden des fhswf-Packages View(michelin) # Anzeigen der Daten michelin # Anzeigen der Daten auf der Konsole ?michelin # Anzeigen der Datenbeschreibung 15.2 2024: Flixbus library(fhswf) # Laden des fhswf-Packages View(flixbus) # Anzeigen der Daten flixbus # Anzeigen der Daten auf der Konsole ?flixbus # Anzeigen der Datenbeschreibung 15.3 2024: Lego library(fhswf) # Laden des fhswf-Packages View(lego) # Anzeigen der Daten lego # Anzeigen der Daten auf der Konsole ?lego # Anzeigen der Datenbeschreibung 15.4 2023: Bike Sharing library(fhswf) # Laden des fhswf-Packages View(bikesharing) # Anzeigen der Daten bikesharing # Anzeigen der Daten auf der Konsole ?bikesharing # Anzeigen der Datenbeschreibung Beispiel # Deskriptive Statistik der benutzten Fahrräder pro Tag summary(bikesharing$cnt) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 22 3152 4548 4504 5956 8714 15.5 2023: Yacht Prices library(fhswf) # Laden des fhswf-Packages View(boatprices) # Anzeigen der Daten boatprices # Anzeigen der Daten auf der Konsole ?boatprices # Anzeigen der Datenbeschreibung Beispiel # Deskriptive Statistik des Preises der gelisteten Boote in Euro summary(boatprices$price) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 3500 46670 85000 109823 160000 299750 15.6 2023: Insurance library(fhswf) # Laden des fhswf-Packages View(insurance) # Anzeigen der Daten insurance # Anzeigen der Daten auf der Konsole ?insurance # Anzeigen der Datenbeschreibung Beispiel # Deskriptive Statistik der jährlichen Versicherungskosten in US Dollar summary(insurance$charges) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 1122 4740 9382 13270 16640 63770 15.7 2022: NYC Airbnb library(fhswf) # Laden des fhswf-Packages View(nycairbnb) # Anzeigen der Daten nycairbnb # Anzeigen der Daten auf der Konsole ?nycairbnb # Anzeigen der Datenbeschreibung Beispiel summary(nycairbnb$price) # Deskriptive Statistik des Preises pro Übernachtung ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0 69.0 106.0 152.7 175.0 10000.0 15.8 2022: Autopreise library(fhswf) # Laden des fhswf-Packages View(carprices) # Anzeigen der Daten carprices # Anzeigen der Daten auf der Konsole ?carprices # Anzeigen der Datenbeschreibung Beispiel summary(carprices$price) # Deskriptive Statistik des Kaufpreises ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 5118 7775 10295 13207 16500 45400 4 15.9 2022: WHO Data library(fhswf) # Laden des fhswf-Packages View(whodata) # Anzeigen der Daten whodata # Anzeigen der Daten auf der Konsole ?whodata # Anzeigen der Datenbeschreibung Beispiel # Human Development Index von Deutschland im Jahr 2015 whodata[whodata$country_code == &quot;DEU&quot; &amp; whodata$year == 2015, ]$hdi ## [1] 0.938 # Mittlerer Human Development Index über alle (verfügbaren) Länder in 2017 median(whodata[whodata$year == 2017, ]$hdi, na.rm = TRUE) ## [1] 0.736 15.10 2021: Taxi Trips Vorbereitungen library(geodist) library(osrm) # load raw data coursepath &lt;- &quot;~/sciebo/courses/bchwtz-stat&quot; filepath &lt;- &quot;nongit/data/2021-taxi/nyctaxi.csv&quot; savepath &lt;- &quot;data&quot; d &lt;- read.csv(file.path(coursepath, filepath)) # select a subset of the data n &lt;- 10000 set.seed(20210408) d &lt;- d[sample(nrow(d), size = n), ] # Function to make points dataframe make_pts &lt;- function(x){ pts &lt;- data.frame(long = c(x[&quot;pickup_longitude&quot;], x[&quot;dropoff_longitude&quot;]), lat = c(x[&quot;pickup_latitude&quot;], x[&quot;dropoff_latitude&quot;]), row.names = NULL) return(pts) } # Function to request route information from openstreetmap make_dist_duration &lt;- function(x, type=c(&quot;car&quot;,&quot;bike&quot;,&quot;foot&quot;)[1]){ pts &lt;- make_pts(x) route &lt;- osrm::osrmRoute(loc=pts, returnclass = &quot;sf&quot;, osrm.profile = type) return(c(osrm_distance=route$dist, osrm_duration=route$duration)) } # Funtion to calculate geodesic_distance make_geodesic_distance &lt;- function(x){ pickup_loc &lt;- c(longitude=x[&quot;pickup_longitude&quot;], latitude=x[&quot;pickup_latitude&quot;]) dropoff_loc &lt;- c(longitude=x[&quot;dropoff_longitude&quot;], latitude=x[&quot;dropoff_latitude&quot;]) geodesic_distance &lt;- geodist::geodist(x=pickup_loc, y=dropoff_loc, measure = &quot;geodesic&quot;) return(geodesic_distance) } # Getting route information involves an external server and needs to be batched # so that it does not time out mb &lt;- 15 # microbatch size f &lt;- rep((1:ceiling(nrow(d)/mb)), each=mb)[1:nrow(d)] # splitkey dlist &lt;- split(d, f) for (idx in 1:length(dlist)){ batch &lt;- dlist[[idx]] # Generate route information and add to dataset try({ res &lt;- apply(batch, MARGIN=1, make_dist_duration) df &lt;- cbind(batch, t(res)) # Add day of the week to dataset df$weekday &lt;- weekdays(as.Date(df$pickup_datetime)) # Add geodesic distance to dataset df$geodesic_distance &lt;- apply(df, MARGIN=1, make_geodesic_distance) # caching: export to csv filename &lt;- paste0(&quot;cache_&quot;,idx,&quot;-2021_fhswf_stat_taxi.csv&quot;) write.csv(df, file = file.path(coursepath,savepath,filename), row.names = FALSE) }) Sys.sleep(runif(1,1,mb)) message(idx) } files &lt;- list.files(file.path(coursepath,savepath), pattern = &quot;^cache*&quot;, full.names = T) length(files) flist &lt;- lapply(files, read.csv) df &lt;- do.call(&quot;rbind&quot;, flist) # write final csv write.csv(df, file = file.path(coursepath,savepath,&quot;2021_fhswf_stat_taxi.csv&quot;), row.names = FALSE) # delete cache files unlink(files) Datenbeschreibung Variablen id: a unique identifier for each trip vendor_id: a code indicating the provider associated with the trip record pickup_datetime: date and time when the meter was engaged dropoff_datetime: date and time when the meter was disengaged passenger_count: the number of passengers in the vehicle (driver entered value) pickup_longitude: the longitude where the meter was engaged pickup_latitude: the latitude where the meter was engaged dropoff_longitude: the longitude where the meter was disengaged dropoff_latitude: the latitude where the meter was disengaged store_and_fwd_flag: This flag indicates whether the trip record was held in vehicle memory before sending to the vendor because the vehicle did not have a connection to the server - Y=store and forward; N=not a store and forward trip trip_duration: duration of the trip in seconds Ergänzte Variablen osrm_distance: the travel distance by car in kilometers as calculated by the Open Streetmap Routing Machine osrm_duration: the estimated duration for travelling the route by car in minutes as estimated by the Open Streetmap Routing Machine geodesic_distance: the geodesic distance in meters between the pickup and dropoff coordinates calculated using the method of Karney (2013) weekday: the day of the week when the trip was started Daten laden # load the data x &lt;- read.csv(&quot;https://bchwtz.github.io/bchwtz-stat/data/2021_fhswf_stat_taxi.csv&quot;) Tips &amp; Tricks # working with dates and times x$pickup_datetime &lt;- as.POSIXlt(x$pickup_datetime, tz=&quot;America/New_York&quot;) x$pickup_datetime[1] ## [1] &quot;2016-04-29 13:32:54 EDT&quot; weekdays(x$pickup_datetime[1]) ## [1] &quot;Friday&quot; months(x$pickup_datetime[1]) ## [1] &quot;April&quot; Quellen https://www.kaggle.com/c/nyc-taxi-trip-duration/ https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page 15.11 2021: Hauspreise Vorbereitungen library(tidyverse) # load raw data coursepath &lt;- &quot;~/sciebo/courses/bchwtz-stat&quot; filepath &lt;- &quot;nongit/data/2021-housing/germany_housing.csv&quot; savepath &lt;- &quot;data&quot; d &lt;- read.csv(file.path(coursepath, filepath)) # rename columns and select relevant ones d &lt;- d %&gt;% rename( id = X, price = Price, type = Type, living_space = Living_space, lot_size = Lot, additional_area = Usable_area, availability = Free_of_Relation, rooms = Rooms, bedrooms = Bedrooms, bathrooms = Bathrooms, floors = Floors, year_construction = Year_built, year_modernization = Year_renovated, condition = Condition, heating = Heating, facility_quality = Furnishing_quality, energy_source = Energy_source, energy_certificate = Energy_certificate, energy_certificate_type = Energy_certificate_type, energy_consumption = Energy_consumption, energy_efficiency_class = Energy_efficiency_class, state = State, district = City, city = Place, parking_lot = Garages, parking_lot_type = Garagetype ) %&gt;% select(-availability) # export to csv write.csv(d, file = file.path(coursepath,savepath,&quot;2021_fhswf_stat_housing.csv&quot;), row.names = FALSE) Datenbeschreibung id: a unique identifier for each offer price: the requested price in Euro to buy the building type: the type of the offered building living_space: the size of the usable living space in the building in square meters lot_size: the size of the associated lot in square meters additional_area: the size of the additionally available area in square meters that is not qualified living space due to legal reasons rooms: the total number of rooms in the building bedrooms: the number of bedrooms in the building bathrooms: the number of bathrooms in the building floors: number of storys in the building year_construction: the year in which the building was first constructed year_modernization: the year in which the building was lastly renovated facility_quality: an indication of quality of the installed fixtures, facilities and if applicable furniture condition: the general condition of the building and facilities heating: the primary technology for heating the building energy_source: the primary source of energy for heating and warm water energy_certificate: an indication wheter and energy consumption certificate is required and/or available energy_certificate_type: the type of the available energy certification energy_consumption: the required amount of energy in \\(kWh/m^2\\) per year to heat the building energy_efficiency_class: an indication of the quality of the thermal insulation of the building according to the german EnEV, ranging from A+ (best) to H (worst) state: the federal state of germany in which the building is located district: the respective district of the federal stat in which the building is located city: the name of the city to whom the building is allocated parking_lot: the amount of registered parking lots that belong to the building parking_lot_type: the type of the available parking lots Daten laden # load the data x &lt;- read.csv(&quot;https://bchwtz.github.io/bchwtz-stat/data/2021_fhswf_stat_housing.csv&quot;) Quellen https://www.kaggle.com/scriptsultan/german-house-prices 15.12 2021: Human Ressources Vorbereitungen # load raw data coursepath &lt;- &quot;~/sciebo/courses/bchwtz-stat&quot; filepath &lt;- &quot;nongit/data/2021-hr/HRDataset_v14.csv&quot; savepath &lt;- &quot;data&quot; d &lt;- read.csv(file.path(coursepath, filepath)) # harmonize variable names names(d) &lt;- gsub(&quot;_&quot;,&quot;&quot;,names(d)) # export to csv write.csv(d, file = file.path(coursepath,savepath,&quot;2021_fhswf_stat_hr.csv&quot;), row.names = FALSE) Datenbeschreibung EmployeeName: Employee’s full name d EmpID: Employee ID is unique to each employee MarriedID: Is the person married (1 or 0 for yes or no) MaritalStatusID: Marital status code that matches the text field MaritalDesc EmpStatusID: Employment status code that matches text field EmploymentStatus DeptID Department: ID code that matches the department the employee works in PerfScoreID: Performance Score code that matches the employee’s most recent performance score FromDiversityJobFairID: Was the employee sourced from the Diversity job fair? 1 or 0 for yes or no PayRate: The person’s hourly pay rate. All salaries are converted to hourly pay rate Termd: Has this employee been terminated - 1 or 0 PositionID: An integer indicating the person’s position Position: The text name/title of the position the person has State: The state that the person lives in Zip: The zip code for the employee DOB: Date of Birth for the employee Sex: Sex - M or F MaritalDesc: The marital status of the person (divorced, single, widowed, separated, etc) CitizenDesc: Label for whether the person is a Citizen or Eligible NonCitizen HispanicLatino: Yes or No field for whether the employee is Hispanic/Latino RaceDesc: Description/text of the race the person identifies with DateofHire: Date the person was hired DateofTermination: Date the person was terminated, only populated if, in fact, Termd = 1 TermReason: A text reason / description for why the person was terminated EmploymentStatus: A description/category of the person’s employment status. Anyone currently working full time = Active Department: Name of the department that the person works in ManagerName: The name of the person’s immediate manager ManagerID: A unique identifier for each manager RecruitmentSource: The name of the recruitment source where the employee was recruited from PerformanceScore: Performance Score text/category (Fully Meets, Partially Meets, PIP, Exceeds) EngagementSurvey: Results from the last engagement survey, managed by our external partner EmpSatisfaction: A basic satisfaction score between 1 and 5, as reported on a recent employee satisfaction survey SpecialProjectsCount: The number of special projects that the employee worked on during the last 6 months LastPerformanceReviewDate: The most recent date of the person’s last performance review DaysLateLast30: The number of times that the employee was late to work during the last 30 days Absences: The number of times the employee was absent from work Daten laden # load the data x &lt;- read.csv(&quot;https://bchwtz.github.io/bchwtz-stat/data/2021_fhswf_stat_hr.csv&quot;) Tips &amp; Tricks # working with dates and times x$Date_Hiring &lt;- as.Date(x$DateofHire,format=&#39;%m/%d/%Y&#39;) x$Date_Termination &lt;- as.Date(x$DateofTermination,format=&#39;%m/%d/%Y&#39;) # example difference between two timepoints difftime(x$Date_Termination[2],x$Date_Hiring[2], units = &quot;days&quot;) ## Time difference of 444 days Quellen https://www.kaggle.com/rhuebner/human-resources-data-set https://rpubs.com/rhuebner/hr_codebook_v14 "],["gruppenarbeit.html", "Gruppenarbeit", " Gruppenarbeit Die Bewertung der Gruppenarbeiten erfolgt mit dem folgenden Formular: Download Beispielbogen Download Bewertungsformular "],["evaluation.html", "Evaluation", " Evaluation stats_ss2021 &lt;- tribble( ~date, ~vg, ~g, ~n, ~b, ~vb, ~total, &quot;07.04.2021&quot;,45,71,7,0,0,128, &quot;12.04.2021&quot;,24,63,10,0,0,119, &quot;14.04.2021&quot;,34,55,20,0,0,118, &quot;19.04.2021&quot;,15,54,12,2,0,97, &quot;26.04.2021&quot;,17,42,8,2,1,99, &quot;28.04.2021&quot;,55,38,13,1,0,115, &quot;05.05.2021&quot;,23,37,13,1,0,110 ) evcnames&lt;- c(&quot;Datum&quot;,&quot;sehr zufrieden&quot;, &quot;zufrieden&quot;, &quot;weder zufrieden noch unzufrieden&quot;, &quot;unzufrieden&quot;, &quot;sehr unzufrieden&quot;, &quot;anwesend&quot;) kable(stats_ss2021, booktabbs=T, col.names = evcnames) "],["system-info.html", "System Info", " System Info Sys.time() ## [1] &quot;2025-01-15 06:38:29 UTC&quot; sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.1 LTS ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so; LAPACK version 3.12.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## time zone: Etc/UTC ## tzcode source: system (glibc) ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] kableExtra_1.4.0 knitr_1.49 lubridate_1.9.4 forcats_1.0.0 ## [5] stringr_1.5.1 dplyr_1.1.4 purrr_1.0.2 readr_2.1.5 ## [9] tidyr_1.3.1 tibble_3.2.1 ggplot2_3.5.1 tidyverse_2.0.0 ## [13] fhswf_0.0.9 ## ## loaded via a namespace (and not attached): ## [1] gtable_0.3.6 jsonlite_1.8.9 compiler_4.4.2 tidyselect_1.2.1 ## [5] xml2_1.3.6 jquerylib_0.1.4 systemfonts_1.1.0 scales_1.3.0 ## [9] yaml_2.3.10 fastmap_1.2.0 R6_2.5.1 generics_0.1.3 ## [13] bookdown_0.41 munsell_0.5.1 svglite_2.1.3 bslib_0.8.0 ## [17] pillar_1.10.0 tzdb_0.4.0 rlang_1.1.4 stringi_1.8.4 ## [21] cachem_1.1.0 xfun_0.49 sass_0.4.9 viridisLite_0.4.2 ## [25] timechange_0.3.0 cli_3.6.3 withr_3.0.2 magrittr_2.0.3 ## [29] digest_0.6.37 grid_4.4.2 rstudioapi_0.17.1 hms_1.1.3 ## [33] lifecycle_1.0.4 vctrs_0.6.5 evaluate_1.0.1 glue_1.8.0 ## [37] colorspace_2.1-1 rmarkdown_2.29 tools_4.4.2 pkgconfig_2.0.3 ## [41] htmltools_0.5.8.1 Buchwitz, Benjamin. 2022. Fhswf: Fhswf. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
