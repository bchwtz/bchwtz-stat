[["index.html", "Statistics Einführung", " Statistics Benjamin Buchwitz 2025-05-22 Einführung Herzlich Willkommen im Kurs Statistik Woche Thema Slides 1 Grundlagen + Häufigkeit PDF + PDF 2 Maßzahlen PDF 3 Zusammenhang PDF 4 Kombinatorik PDF 5 Wahrscheinlichkeitsrechnung PDF 6 Anwendung der Wsk.Rechnung PDF 7 Verteilungen 1/2 PDF 8 Verteilungen 1/2 PDF 9 Schätzung PDF 10 Hypothesentests PDF 11 Lineare Regression PDF 12 Multiple Regression PDF GNK was here. "],["grundlagen.html", "Kapitel 1 Grundlagen", " Kapitel 1 Grundlagen Figure 1.1: Download Slides "],["begriff-der-häufigkeit.html", "Kapitel 2 Begriff der Häufigkeit", " Kapitel 2 Begriff der Häufigkeit Figure 2.1: Download Slides "],["maßzahlen.html", "Kapitel 3 Maßzahlen", " Kapitel 3 Maßzahlen Figure 3.1: Download Slides "],["zweidimensionale-verteilungen.html", "Kapitel 4 Zweidimensionale Verteilungen", " Kapitel 4 Zweidimensionale Verteilungen Figure 4.1: Download Slides "],["kombinatorik.html", "Kapitel 5 Kombinatorik", " Kapitel 5 Kombinatorik Figure 5.1: Download Slides "],["wahrscheinlichkeitsrechnung.html", "Kapitel 6 Wahrscheinlichkeitsrechnung", " Kapitel 6 Wahrscheinlichkeitsrechnung Figure 6.1: Download Slides "],["anwendungen-der-wahrscheinlichkeitsrechnung.html", "Kapitel 7 Anwendungen der Wahrscheinlichkeitsrechnung", " Kapitel 7 Anwendungen der Wahrscheinlichkeitsrechnung Figure 7.1: Download Slides "],["wahrscheinlichkeitsverteilungen.html", "Kapitel 8 Wahrscheinlichkeitsverteilungen", " Kapitel 8 Wahrscheinlichkeitsverteilungen Figure 8.1: Download Slides "],["spezielle-verteilungen.html", "Kapitel 9 Spezielle Verteilungen", " Kapitel 9 Spezielle Verteilungen Figure 9.1: Download Slides "],["von-der-stichprobe-zur-grundgesamtheit.html", "Kapitel 10 Von der Stichprobe zur Grundgesamtheit", " Kapitel 10 Von der Stichprobe zur Grundgesamtheit Figure 10.1: Download Slides "],["hypothesentests.html", "Kapitel 11 Hypothesentests 11.1 Korrelationskoeffizient (Pearson)", " Kapitel 11 Hypothesentests Figure 11.1: Download Slides 11.1 Korrelationskoeffizient (Pearson) 11.1.1 Theoretische Grundlagen Der empirische Korrelationskoeffizient nach Pearson \\(r_{xy}\\) als Schätzer für den Korrelationskoeffizienten in der Grundgesamtheit \\(\\rho_{xy}\\) ist wie folgt definiert. \\[ r_{xy} = \\frac{s_{xy}}{\\sqrt{s_x^2 s_y^2}} \\] Dabei bezeichnet \\(s_x^2\\) die empirische Varianz der Variable \\(X\\), \\(s_y^2\\) die empirische Varianz der Variable \\(Y\\) und \\(s_{xy}\\) die empirische Kovarianz zwischen den Variablen \\(X\\) und \\(Y\\). Die nachfolgende Tabelle zeigt die Hypothesen und die Testvorschriften für einen rechtssseitigen, linksseitigen und beidseitigen Hypothesentest. Die Nullhypothese \\(H_0: \\rho = 0\\) entspricht der Annahme der stochastischen Unabhängigkeit. Zur Vereinfachung der Notation wird der Korrelationskoeffizient zwischen \\(X\\) und \\(Y\\), in der nachfolgenden Tabelle nur mit \\(\\rho\\) bzw. \\(r\\) bezeichnet. Annahmen: Bivariate Normalverteilung von \\(X\\) und \\(Y\\) in der Grundgesamtheit, \\(n\\leq 30\\). Hypothesen Testvorschrift: Verwerfe \\(H_0\\), wenn gilt: \\(H_0: \\rho = 0\\) vs. \\(H_1: \\rho &gt; 0\\) \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &gt; t_{n-2,1-\\alpha}\\) \\(H_0: \\rho = 0\\) vs. \\(H_1: \\rho &lt; 0\\) \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &lt; -t_{n-2,1-\\alpha}\\) \\(H_0: \\rho = 0\\) vs. \\(H_1: \\rho \\neq 0\\) \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &gt; t_{n-2,1-\\alpha}\\) oder \\(\\frac{r\\sqrt{n-2}}{\\sqrt{1-r^2}} &lt; -t_{n-2,1-\\alpha}\\) 11.1.2 Praktische Anwendung Angewendet werden kann der Signifikanztest für den Korrelationskoeffizienten nach Pearson in R mit der Funktion cor.test unter setzen des Arguments method = \"pearson\". Die Festlegung der Richtung des Tests (rechtsseitig, linksseitig, beidseitig) durch Spezifikation der Alternativhypothese \\(H_1\\) erlaubt das Argument alternative. x &lt;- c(44.4, 45.9, 41.9, 53.3, 44.7, 44.1, 50.7, 45.2, 60.1) y &lt;- c( 2.6, 3.1, 2.5, 5.0, 3.6, 4.0, 5.2, 2.8, 3.8) result &lt;- cor.test(x, y, method = &quot;pearson&quot;, alternative = &quot;two.sided&quot;) result ## ## Pearson&#39;s product-moment correlation ## ## data: x and y ## t = 1.8411, df = 7, p-value = 0.1082 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## -0.1497426 0.8955795 ## sample estimates: ## cor ## 0.5711816 Im gezeigten Beispiel wird ein beidseitiger Hypothesentest (alternative = \"two.sided\") für einen fiktiven Datensatz mit \\(n=\\) 9 Beobachtungen durchgeführt. Der berechnete empirische Korrelationskoeffizient beträgt hier \\(r_{xy}=\\) 0.5712. Die berechnete Teststatistik aus einer \\(t\\)-Verteilung mit 7 Freiheitsgerade beträgt 1.841. Die Nullhypothese kann erstmals ab einem Signifikanzniveau von \\(\\alpha^*=\\) 0.1082 verworfen werden. Angenommen der Test wird mit einem Signifikanzniveau von \\(\\alpha = 0.05 = 5\\%\\) durchgeführt, so kann die Nullhypothese \\(H_0\\) nicht verworfen werden. Es liegt keine empirische Evidenz für die Abhängigkeit von \\(X\\) und \\(Y\\) in der Grundgesamtheit vor. Es gilt \\(\\rho_{xy}=0\\), die Variablen \\(X\\) und \\(Y\\) sind voneinander nicht linear abhängig. 11.1.3 Ergänzende Erläuterungen Nachfolgend wird die manuelle Berechnung für die wesentlichen Werte des Hypothesentests nachvollzogen. Die gezeigten Werte sind Deckungsgleich mit den Werten der Funktion cor.test aus dem zuvor gezeigten Beispiel. # Stichprobengröße auslesen n &lt;- length(x) &lt;- length(y) # Teststatistik berechnen r &lt;- cor(x,y) teststat &lt;- (r*sqrt(n-2))/sqrt(1-r^2) # Implizite Irrtumswahrscheinlichkeit berechnen alpha_imp &lt;- 2 * pt(teststat, df = n-2, lower.tail = FALSE) Um die gezeigte Testvorschrift manuell prüfen zu können, wird nach Festlegen der maximalen Irrtumswahrscheinlichkeit \\(\\alpha\\) noch der Vergleichswert der \\(t\\)-Verteilung (rechte Seite der Ungleichungen aus der Tabelle mit den Testvorschriften) benötigt. Die Funktion qt gibt hier die Quantile der \\(t\\)-Verteilung an und übernimmt somit die Aufgabe der Verteilungstabelle. Die Testvorschrift kann also auch hier direkt über die oben gezeigten Ungleichungen als auch über das implizite Signifikanzniveau, dem p-Value \\(\\alpha^*\\), geprüft werden. Beide Vorgehensweisen führen (natürlich) zu einem identischen Ergebnis. # Vergleichsgröße der t-Verteilung bestimmen alpha &lt;- 0.05 tval &lt;- qt(1-alpha/2, df = n-2) # Testentscheidung: H0 verwerfen? # Prüfung mittels Testvorschrift (teststat &gt; tval) | (teststat &lt; -tval) # Testentscheidung: H0 verwerfen? # Prüfung mittels implizitem Signifikanzniveau alpha_imp &lt; alpha "],["lineare-regression.html", "Kapitel 12 Lineare Regression", " Kapitel 12 Lineare Regression Figure 12.1: Download Slides "],["multiple-regression.html", "Kapitel 13 Multiple Regression", " Kapitel 13 Multiple Regression Figure 13.1: Download Slides "],["fhswf-package.html", "Kapitel 14 FHSWF Package 14.1 Installation 14.2 Template 14.3 Nutzung des Templates 14.4 Wissenschaftliches Arbeiten in R Markdown 14.5 Datacamp(-zertifikate)", " Kapitel 14 FHSWF Package Für die Bearbeitung im Rahmen des Kurses steht Ihnen das fhswf Package zur Verfügung. Dieses ergänzt R um einige spezielle Funktionen, stellt weitere Datensätze bereit und installiert Vorlagen (Templates) für Seminar-, Gruppen- und Abschlussarbeiten sowie für Präsentationen. 14.1 Installation Das fhswf Package befindet sich aktuell noch in der Entwicklung und ist daher noch nicht im zentralen offiziellen Package Archiv (CRAN) gelistet. Für die Installation benötigen Sie eine Funktion aus dem Paket remotes, dass einmalig installiert werden muss. Die jeweils neuste fhswf-Paketversion erhalten Sie mit dem folgenden Programmcode. install.packages(&quot;remotes&quot;) # Muss nur einmalig ausgeführt werden remotes::install_github(&quot;bchwtz/fhswf&quot;) # Neueste Paketversion installieren 14.2 Template Nach der Installation des fhswf Packages, müssen Sie die erforderlichen Werkzeuge für die Nutzung des Rmarkdown Templates installieren und initialisieren. Dafür müssen die folgenden Befehle ausgeführt werden. tinytex::install_tinytex() # LaTeX installieren fhswf::install_fhswf() # Fehlende LaTeX Pakete installieren Der Installationsprozess ergänzt eine Vielzahl von LaTeX Komponenten und benötigt je nach Leistung und Auslastung des benutzten Computers etwa 30 Minuten. 14.3 Nutzung des Templates Um das Template fhswf-seminarpaper nutzen zu können, klicken Sie unter File auf New File und dann auf R Markdown.... Anschließend öffnet sich ein Fenster, in dem Sie auf “From Template” klicken und dann sollte dort “FHSWF - Seminarpaper (pdf)” aufgelistet sein (siehe Abbildung 14.1). Dieses Template klicken Sie dann an, geben unter “Name” (siehe Abbildung 14.1) einen Namen für die Rmd-Datei ein, bestätigen dies mit OK und das Template öffnet sich anschließend (es wird ein Ordner mit dem von Ihnen angegebenen Namen erstellt, in dem alle für das Template erforderlichen Dateien abgespeichert sind). Figure 14.1: Aufruf des Templates FHSWF - Seminarpaper (pdf) aus dem R-Paket fhswf (Buchwitz 2022). Verweis auf Quellen und Quellenverzeichnis Um auf die von Ihnen verwendeten Quellen im Text zu verweisen und um diese einschließlich der von Ihnen genutzten R-Pakete im Quellenverzeichnis anzuführen, nutzen Sie das fhswf Seminarpaper Template wie folgt: Indem Sie das Template FHSWF - Seminarpaper verwenden, wird eine Bib-Datei namens references automatisch mitgeladen. In dieser Datei sehen Sie Einträge, die jeweils für beispielhafte Quellen angelegt worden sind, wie z.B.: @ARTICLE{BC64, title = {An analysis of transformations}, author = &quot;Box, George E P and Cox, David R&quot;, journal = &quot;Journal of the Royal Statistical Society. Series B&quot;, volume = 26, number = 2, pages = &quot;211--252&quot;, year = 1964 } Für die von Ihnen genutzten Quellen legen Sie entsprechend einzelne Einträge in references.bib an. Im Text (in R Markdown) verweisen Sie dann auf die verwendeten Quellen mithilfe des @-Symbols wie z.B. @BC64 (BC64 ist eine ID für die entsprechende Quelle, diese ID darf keine Leerzeichen enthalten). Im - basierend auf dem R Markdown-Dokument - generierten PDF-Dokument erscheinen dann entsprechend der/die Autor(en) und das Erscheinungsjahr. Wenn Sie das fhswf-seminarpaper Template öffnen, sind im Abschnitt Using Citations Beispiele zum Thema Zitation gegeben. Sind Ihre Quellen in der Bib-Datei angelegt und haben Sie auf diese im Text verwiesen, wird automatisch ein Literatur- bzw. Quellenverzeichnis erstellt. Möchten Sie Quellen, auf die Sie nicht im Text verweisen, manuell zum Quellenverzeichnis hinzufügen, legen Sie ebenfalls entsprechende Einträge in der Bib-Datei an und rufen diese über “\\nocite{IDderQuelle}” in R Markdown auf. 14.4 Wissenschaftliches Arbeiten in R Markdown Um das wissenschaftliche Arbeiten und Schreiben in R Markdown zu erleichtern, wurde das FHSWF Seminarpaper Template mit Hinweisen zum Thema wissenschaftliche Sprache, zur Erstellung von Tabellen, Abbildungen, Gleichungen, zur Darstellung von Code, zur Zitation etc. gefüllt. Diese können über nachfolgende Links heruntergeladen werden. Description R script R Markdown Datei: FHSWF Template mit Notizen und Hinweisen FHSWF Template mit Hinweisen (.Rmd) PDF Datei: FHSWF Template mit Notizen und Hinweisen FHSWF Template mit Hinweisen (.pdf) bib-Datei des mit Hinweisen versehenen FHSWF Templates references.bib 14.5 Datacamp(-zertifikate) Komfortables Einbetten der Datacamp Zertifikate in das erzeugte PDF erlaubt die Funktion fhswf::include_datacamp(). Dazu müssen die PDF Dokumente in einem Unterorder des Seminararbeits-Projektes abgelegt werden. In der Standardeinstellung nutzt die Funktion fhswf::include_datacamp() einen Ordner mit dem Namen datacamp. Die Dateinamen der Zertifikate und der Dateipfad sollten keine Sonderzeichen enthalten, da dies häufig zu Problemen führt. Auch Leerzeichen im Namen der Zertifikate sollten vermieden werden. Die Funktion fhswf::include_datacamp() benennt die PDF Dateien der Zertifikate (in der Standardeinstellung) automatisch um, sodass bei der Erstellung des Seminarpapers weniger Fehler auftreten. Der nachfolgende Screenshot zeigt den notwendigen Programmcode für die Einbettung der Zertifikate und das daraus resultierende Ergebnis. Dabei werden die PDF Dokumente bewusst in der geringen Größe eingebettet - diese sind detailreich, hereinzoombar und daher für die Korrektoren gut prüfbar. Der Programmcode ist ebenfalls auf der Hilfeseite ?include_datacamp() einsebar. References Buchwitz, Benjamin. 2022. Fhswf: Fhswf. "],["daten.html", "Kapitel 15 Daten 15.1 2024: Guide Michelin 15.2 2024: Flixbus 15.3 2024: Lego 15.4 2023: Bike Sharing 15.5 2023: Yacht Prices 15.6 2023: Insurance 15.7 2022: NYC Airbnb 15.8 2022: Autopreise 15.9 2022: WHO Data 15.10 2021: Taxi Trips 15.11 2021: Hauspreise 15.12 2021: Human Ressources", " Kapitel 15 Daten 15.1 2024: Guide Michelin library(fhswf) # Laden des fhswf-Packages View(michelin) # Anzeigen der Daten michelin # Anzeigen der Daten auf der Konsole ?michelin # Anzeigen der Datenbeschreibung 15.2 2024: Flixbus library(fhswf) # Laden des fhswf-Packages View(flixbus) # Anzeigen der Daten flixbus # Anzeigen der Daten auf der Konsole ?flixbus # Anzeigen der Datenbeschreibung 15.3 2024: Lego library(fhswf) # Laden des fhswf-Packages View(lego) # Anzeigen der Daten lego # Anzeigen der Daten auf der Konsole ?lego # Anzeigen der Datenbeschreibung 15.4 2023: Bike Sharing library(fhswf) # Laden des fhswf-Packages View(bikesharing) # Anzeigen der Daten bikesharing # Anzeigen der Daten auf der Konsole ?bikesharing # Anzeigen der Datenbeschreibung Beispiel # Deskriptive Statistik der benutzten Fahrräder pro Tag summary(bikesharing$cnt) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 22 3152 4548 4504 5956 8714 15.5 2023: Yacht Prices library(fhswf) # Laden des fhswf-Packages View(boatprices) # Anzeigen der Daten boatprices # Anzeigen der Daten auf der Konsole ?boatprices # Anzeigen der Datenbeschreibung Beispiel # Deskriptive Statistik des Preises der gelisteten Boote in Euro summary(boatprices$price) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 3500 46670 85000 109823 160000 299750 15.6 2023: Insurance library(fhswf) # Laden des fhswf-Packages View(insurance) # Anzeigen der Daten insurance # Anzeigen der Daten auf der Konsole ?insurance # Anzeigen der Datenbeschreibung Beispiel # Deskriptive Statistik der jährlichen Versicherungskosten in US Dollar summary(insurance$charges) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 1122 4740 9382 13270 16640 63770 15.7 2022: NYC Airbnb library(fhswf) # Laden des fhswf-Packages View(nycairbnb) # Anzeigen der Daten nycairbnb # Anzeigen der Daten auf der Konsole ?nycairbnb # Anzeigen der Datenbeschreibung Beispiel summary(nycairbnb$price) # Deskriptive Statistik des Preises pro Übernachtung ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0 69.0 106.0 152.7 175.0 10000.0 15.8 2022: Autopreise library(fhswf) # Laden des fhswf-Packages View(carprices) # Anzeigen der Daten carprices # Anzeigen der Daten auf der Konsole ?carprices # Anzeigen der Datenbeschreibung Beispiel summary(carprices$price) # Deskriptive Statistik des Kaufpreises ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 5118 7775 10295 13207 16500 45400 4 15.9 2022: WHO Data library(fhswf) # Laden des fhswf-Packages View(whodata) # Anzeigen der Daten whodata # Anzeigen der Daten auf der Konsole ?whodata # Anzeigen der Datenbeschreibung Beispiel # Human Development Index von Deutschland im Jahr 2015 whodata[whodata$country_code == &quot;DEU&quot; &amp; whodata$year == 2015, ]$hdi ## [1] 0.938 # Mittlerer Human Development Index über alle (verfügbaren) Länder in 2017 median(whodata[whodata$year == 2017, ]$hdi, na.rm = TRUE) ## [1] 0.736 15.10 2021: Taxi Trips Vorbereitungen library(geodist) library(osrm) # load raw data coursepath &lt;- &quot;~/sciebo/courses/bchwtz-stat&quot; filepath &lt;- &quot;nongit/data/2021-taxi/nyctaxi.csv&quot; savepath &lt;- &quot;data&quot; d &lt;- read.csv(file.path(coursepath, filepath)) # select a subset of the data n &lt;- 10000 set.seed(20210408) d &lt;- d[sample(nrow(d), size = n), ] # Function to make points dataframe make_pts &lt;- function(x){ pts &lt;- data.frame(long = c(x[&quot;pickup_longitude&quot;], x[&quot;dropoff_longitude&quot;]), lat = c(x[&quot;pickup_latitude&quot;], x[&quot;dropoff_latitude&quot;]), row.names = NULL) return(pts) } # Function to request route information from openstreetmap make_dist_duration &lt;- function(x, type=c(&quot;car&quot;,&quot;bike&quot;,&quot;foot&quot;)[1]){ pts &lt;- make_pts(x) route &lt;- osrm::osrmRoute(loc=pts, returnclass = &quot;sf&quot;, osrm.profile = type) return(c(osrm_distance=route$dist, osrm_duration=route$duration)) } # Funtion to calculate geodesic_distance make_geodesic_distance &lt;- function(x){ pickup_loc &lt;- c(longitude=x[&quot;pickup_longitude&quot;], latitude=x[&quot;pickup_latitude&quot;]) dropoff_loc &lt;- c(longitude=x[&quot;dropoff_longitude&quot;], latitude=x[&quot;dropoff_latitude&quot;]) geodesic_distance &lt;- geodist::geodist(x=pickup_loc, y=dropoff_loc, measure = &quot;geodesic&quot;) return(geodesic_distance) } # Getting route information involves an external server and needs to be batched # so that it does not time out mb &lt;- 15 # microbatch size f &lt;- rep((1:ceiling(nrow(d)/mb)), each=mb)[1:nrow(d)] # splitkey dlist &lt;- split(d, f) for (idx in 1:length(dlist)){ batch &lt;- dlist[[idx]] # Generate route information and add to dataset try({ res &lt;- apply(batch, MARGIN=1, make_dist_duration) df &lt;- cbind(batch, t(res)) # Add day of the week to dataset df$weekday &lt;- weekdays(as.Date(df$pickup_datetime)) # Add geodesic distance to dataset df$geodesic_distance &lt;- apply(df, MARGIN=1, make_geodesic_distance) # caching: export to csv filename &lt;- paste0(&quot;cache_&quot;,idx,&quot;-2021_fhswf_stat_taxi.csv&quot;) write.csv(df, file = file.path(coursepath,savepath,filename), row.names = FALSE) }) Sys.sleep(runif(1,1,mb)) message(idx) } files &lt;- list.files(file.path(coursepath,savepath), pattern = &quot;^cache*&quot;, full.names = T) length(files) flist &lt;- lapply(files, read.csv) df &lt;- do.call(&quot;rbind&quot;, flist) # write final csv write.csv(df, file = file.path(coursepath,savepath,&quot;2021_fhswf_stat_taxi.csv&quot;), row.names = FALSE) # delete cache files unlink(files) Datenbeschreibung Variablen id: a unique identifier for each trip vendor_id: a code indicating the provider associated with the trip record pickup_datetime: date and time when the meter was engaged dropoff_datetime: date and time when the meter was disengaged passenger_count: the number of passengers in the vehicle (driver entered value) pickup_longitude: the longitude where the meter was engaged pickup_latitude: the latitude where the meter was engaged dropoff_longitude: the longitude where the meter was disengaged dropoff_latitude: the latitude where the meter was disengaged store_and_fwd_flag: This flag indicates whether the trip record was held in vehicle memory before sending to the vendor because the vehicle did not have a connection to the server - Y=store and forward; N=not a store and forward trip trip_duration: duration of the trip in seconds Ergänzte Variablen osrm_distance: the travel distance by car in kilometers as calculated by the Open Streetmap Routing Machine osrm_duration: the estimated duration for travelling the route by car in minutes as estimated by the Open Streetmap Routing Machine geodesic_distance: the geodesic distance in meters between the pickup and dropoff coordinates calculated using the method of Karney (2013) weekday: the day of the week when the trip was started Daten laden # load the data x &lt;- read.csv(&quot;https://bchwtz.github.io/bchwtz-stat/data/2021_fhswf_stat_taxi.csv&quot;) Tips &amp; Tricks # working with dates and times x$pickup_datetime &lt;- as.POSIXlt(x$pickup_datetime, tz=&quot;America/New_York&quot;) x$pickup_datetime[1] ## [1] &quot;2016-04-29 13:32:54 EDT&quot; weekdays(x$pickup_datetime[1]) ## [1] &quot;Friday&quot; months(x$pickup_datetime[1]) ## [1] &quot;April&quot; Quellen https://www.kaggle.com/c/nyc-taxi-trip-duration/ https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page 15.11 2021: Hauspreise Vorbereitungen library(tidyverse) # load raw data coursepath &lt;- &quot;~/sciebo/courses/bchwtz-stat&quot; filepath &lt;- &quot;nongit/data/2021-housing/germany_housing.csv&quot; savepath &lt;- &quot;data&quot; d &lt;- read.csv(file.path(coursepath, filepath)) # rename columns and select relevant ones d &lt;- d %&gt;% rename( id = X, price = Price, type = Type, living_space = Living_space, lot_size = Lot, additional_area = Usable_area, availability = Free_of_Relation, rooms = Rooms, bedrooms = Bedrooms, bathrooms = Bathrooms, floors = Floors, year_construction = Year_built, year_modernization = Year_renovated, condition = Condition, heating = Heating, facility_quality = Furnishing_quality, energy_source = Energy_source, energy_certificate = Energy_certificate, energy_certificate_type = Energy_certificate_type, energy_consumption = Energy_consumption, energy_efficiency_class = Energy_efficiency_class, state = State, district = City, city = Place, parking_lot = Garages, parking_lot_type = Garagetype ) %&gt;% select(-availability) # export to csv write.csv(d, file = file.path(coursepath,savepath,&quot;2021_fhswf_stat_housing.csv&quot;), row.names = FALSE) Datenbeschreibung id: a unique identifier for each offer price: the requested price in Euro to buy the building type: the type of the offered building living_space: the size of the usable living space in the building in square meters lot_size: the size of the associated lot in square meters additional_area: the size of the additionally available area in square meters that is not qualified living space due to legal reasons rooms: the total number of rooms in the building bedrooms: the number of bedrooms in the building bathrooms: the number of bathrooms in the building floors: number of storys in the building year_construction: the year in which the building was first constructed year_modernization: the year in which the building was lastly renovated facility_quality: an indication of quality of the installed fixtures, facilities and if applicable furniture condition: the general condition of the building and facilities heating: the primary technology for heating the building energy_source: the primary source of energy for heating and warm water energy_certificate: an indication wheter and energy consumption certificate is required and/or available energy_certificate_type: the type of the available energy certification energy_consumption: the required amount of energy in \\(kWh/m^2\\) per year to heat the building energy_efficiency_class: an indication of the quality of the thermal insulation of the building according to the german EnEV, ranging from A+ (best) to H (worst) state: the federal state of germany in which the building is located district: the respective district of the federal stat in which the building is located city: the name of the city to whom the building is allocated parking_lot: the amount of registered parking lots that belong to the building parking_lot_type: the type of the available parking lots Daten laden # load the data x &lt;- read.csv(&quot;https://bchwtz.github.io/bchwtz-stat/data/2021_fhswf_stat_housing.csv&quot;) Quellen https://www.kaggle.com/scriptsultan/german-house-prices 15.12 2021: Human Ressources Vorbereitungen # load raw data coursepath &lt;- &quot;~/sciebo/courses/bchwtz-stat&quot; filepath &lt;- &quot;nongit/data/2021-hr/HRDataset_v14.csv&quot; savepath &lt;- &quot;data&quot; d &lt;- read.csv(file.path(coursepath, filepath)) # harmonize variable names names(d) &lt;- gsub(&quot;_&quot;,&quot;&quot;,names(d)) # export to csv write.csv(d, file = file.path(coursepath,savepath,&quot;2021_fhswf_stat_hr.csv&quot;), row.names = FALSE) Datenbeschreibung EmployeeName: Employee’s full name d EmpID: Employee ID is unique to each employee MarriedID: Is the person married (1 or 0 for yes or no) MaritalStatusID: Marital status code that matches the text field MaritalDesc EmpStatusID: Employment status code that matches text field EmploymentStatus DeptID Department: ID code that matches the department the employee works in PerfScoreID: Performance Score code that matches the employee’s most recent performance score FromDiversityJobFairID: Was the employee sourced from the Diversity job fair? 1 or 0 for yes or no PayRate: The person’s hourly pay rate. All salaries are converted to hourly pay rate Termd: Has this employee been terminated - 1 or 0 PositionID: An integer indicating the person’s position Position: The text name/title of the position the person has State: The state that the person lives in Zip: The zip code for the employee DOB: Date of Birth for the employee Sex: Sex - M or F MaritalDesc: The marital status of the person (divorced, single, widowed, separated, etc) CitizenDesc: Label for whether the person is a Citizen or Eligible NonCitizen HispanicLatino: Yes or No field for whether the employee is Hispanic/Latino RaceDesc: Description/text of the race the person identifies with DateofHire: Date the person was hired DateofTermination: Date the person was terminated, only populated if, in fact, Termd = 1 TermReason: A text reason / description for why the person was terminated EmploymentStatus: A description/category of the person’s employment status. Anyone currently working full time = Active Department: Name of the department that the person works in ManagerName: The name of the person’s immediate manager ManagerID: A unique identifier for each manager RecruitmentSource: The name of the recruitment source where the employee was recruited from PerformanceScore: Performance Score text/category (Fully Meets, Partially Meets, PIP, Exceeds) EngagementSurvey: Results from the last engagement survey, managed by our external partner EmpSatisfaction: A basic satisfaction score between 1 and 5, as reported on a recent employee satisfaction survey SpecialProjectsCount: The number of special projects that the employee worked on during the last 6 months LastPerformanceReviewDate: The most recent date of the person’s last performance review DaysLateLast30: The number of times that the employee was late to work during the last 30 days Absences: The number of times the employee was absent from work Daten laden # load the data x &lt;- read.csv(&quot;https://bchwtz.github.io/bchwtz-stat/data/2021_fhswf_stat_hr.csv&quot;) Tips &amp; Tricks # working with dates and times x$Date_Hiring &lt;- as.Date(x$DateofHire,format=&#39;%m/%d/%Y&#39;) x$Date_Termination &lt;- as.Date(x$DateofTermination,format=&#39;%m/%d/%Y&#39;) # example difference between two timepoints difftime(x$Date_Termination[2],x$Date_Hiring[2], units = &quot;days&quot;) ## Time difference of 444 days Quellen https://www.kaggle.com/rhuebner/human-resources-data-set https://rpubs.com/rhuebner/hr_codebook_v14 "],["tabellen.html", "Kapitel 16 Tabellen 16.1 Normalverteilung 16.2 \\(t\\)-Verteilung 16.3 \\(\\mathcal{X}^{2}_{n;\\,\\gamma}\\)-Verteilung", " Kapitel 16 Tabellen 16.1 Normalverteilung ## Warning in attr(x, &quot;align&quot;): &#39;xfun::attr()&#39; is deprecated. ## Use &#39;xfun::attr2()&#39; instead. ## See help(&quot;Deprecated&quot;) Verteilungsfunktion \\(F(z)\\) der Standardnormalverteilung \\(N(0,1)\\) Beispiel: \\(F(z) = P(z \\leq 1.96) = 0.9750\\) z 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.0 0.5000 0.5040 0.5080 0.5120 0.5160 0.5199 0.5239 0.5279 0.5319 0.5359 0.1 0.5398 0.5438 0.5478 0.5517 0.5557 0.5596 0.5636 0.5675 0.5714 0.5753 0.2 0.5793 0.5832 0.5871 0.5910 0.5948 0.5987 0.6026 0.6064 0.6103 0.6141 0.3 0.6179 0.6217 0.6255 0.6293 0.6331 0.6368 0.6406 0.6443 0.6480 0.6517 0.4 0.6554 0.6591 0.6628 0.6664 0.6700 0.6736 0.6772 0.6808 0.6844 0.6879 0.5 0.6915 0.6950 0.6985 0.7019 0.7054 0.7088 0.7123 0.7157 0.7190 0.7224 0.6 0.7257 0.7291 0.7324 0.7357 0.7389 0.7422 0.7454 0.7486 0.7517 0.7549 0.7 0.7580 0.7611 0.7642 0.7673 0.7704 0.7734 0.7764 0.7794 0.7823 0.7852 0.8 0.7881 0.7910 0.7939 0.7967 0.7995 0.8023 0.8051 0.8078 0.8106 0.8133 0.9 0.8159 0.8186 0.8212 0.8238 0.8264 0.8289 0.8315 0.8340 0.8365 0.8389 1.0 0.8413 0.8438 0.8461 0.8485 0.8508 0.8531 0.8554 0.8577 0.8599 0.8621 1.1 0.8643 0.8665 0.8686 0.8708 0.8729 0.8749 0.8770 0.8790 0.8810 0.8830 1.2 0.8849 0.8869 0.8888 0.8907 0.8925 0.8944 0.8962 0.8980 0.8997 0.9015 1.3 0.9032 0.9049 0.9066 0.9082 0.9099 0.9115 0.9131 0.9147 0.9162 0.9177 1.4 0.9192 0.9207 0.9222 0.9236 0.9251 0.9265 0.9279 0.9292 0.9306 0.9319 1.5 0.9332 0.9345 0.9357 0.9370 0.9382 0.9394 0.9406 0.9418 0.9429 0.9441 1.6 0.9452 0.9463 0.9474 0.9484 0.9495 0.9505 0.9515 0.9525 0.9535 0.9545 1.7 0.9554 0.9564 0.9573 0.9582 0.9591 0.9599 0.9608 0.9616 0.9625 0.9633 1.8 0.9641 0.9649 0.9656 0.9664 0.9671 0.9678 0.9686 0.9693 0.9699 0.9706 1.9 0.9713 0.9719 0.9726 0.9732 0.9738 0.9744 0.9750 0.9756 0.9761 0.9767 2.0 0.9772 0.9778 0.9783 0.9788 0.9793 0.9798 0.9803 0.9808 0.9812 0.9817 2.1 0.9821 0.9826 0.9830 0.9834 0.9838 0.9842 0.9846 0.9850 0.9854 0.9857 2.2 0.9861 0.9864 0.9868 0.9871 0.9875 0.9878 0.9881 0.9884 0.9887 0.9890 2.3 0.9893 0.9896 0.9898 0.9901 0.9904 0.9906 0.9909 0.9911 0.9913 0.9916 2.4 0.9918 0.9920 0.9922 0.9925 0.9927 0.9929 0.9931 0.9932 0.9934 0.9936 2.5 0.9938 0.9940 0.9941 0.9943 0.9945 0.9946 0.9948 0.9949 0.9951 0.9952 2.6 0.9953 0.9955 0.9956 0.9957 0.9959 0.9960 0.9961 0.9962 0.9963 0.9964 2.7 0.9965 0.9966 0.9967 0.9968 0.9969 0.9970 0.9971 0.9972 0.9973 0.9974 2.8 0.9974 0.9975 0.9976 0.9977 0.9977 0.9978 0.9979 0.9979 0.9980 0.9981 2.9 0.9981 0.9982 0.9982 0.9983 0.9984 0.9984 0.9985 0.9985 0.9986 0.9986 3.0 0.9987 0.9987 0.9987 0.9988 0.9988 0.9989 0.9989 0.9989 0.9990 0.9990 # R Example qnorm(p = 0.975, mean = 0, sd = 1) ## [1] 1.959964 16.2 \\(t\\)-Verteilung ## Warning in attr(x, &quot;align&quot;): &#39;xfun::attr()&#39; is deprecated. ## Use &#39;xfun::attr2()&#39; instead. ## See help(&quot;Deprecated&quot;) Quantile \\(t_{n;\\gamma}\\) der \\(t_n\\)-Verteilung \\(n \\setminus \\gamma\\) 0.995 0.99 0.975 0.95 0.9 0.75 0.5 1 63.6567 31.8205 12.7062 6.3138 3.0777 1.0000 0 2 9.9248 6.9646 4.3027 2.9200 1.8856 0.8165 0 3 5.8409 4.5407 3.1824 2.3534 1.6377 0.7649 0 4 4.6041 3.7469 2.7764 2.1318 1.5332 0.7407 0 5 4.0321 3.3649 2.5706 2.0150 1.4759 0.7267 0 6 3.7074 3.1427 2.4469 1.9432 1.4398 0.7176 0 7 3.4995 2.9980 2.3646 1.8946 1.4149 0.7111 0 8 3.3554 2.8965 2.3060 1.8595 1.3968 0.7064 0 9 3.2498 2.8214 2.2622 1.8331 1.3830 0.7027 0 10 3.1693 2.7638 2.2281 1.8125 1.3722 0.6998 0 11 3.1058 2.7181 2.2010 1.7959 1.3634 0.6974 0 12 3.0545 2.6810 2.1788 1.7823 1.3562 0.6955 0 13 3.0123 2.6503 2.1604 1.7709 1.3502 0.6938 0 14 2.9768 2.6245 2.1448 1.7613 1.3450 0.6924 0 15 2.9467 2.6025 2.1314 1.7531 1.3406 0.6912 0 16 2.9208 2.5835 2.1199 1.7459 1.3368 0.6901 0 17 2.8982 2.5669 2.1098 1.7396 1.3334 0.6892 0 18 2.8784 2.5524 2.1009 1.7341 1.3304 0.6884 0 19 2.8609 2.5395 2.0930 1.7291 1.3277 0.6876 0 20 2.8453 2.5280 2.0860 1.7247 1.3253 0.6870 0 21 2.8314 2.5176 2.0796 1.7207 1.3232 0.6864 0 22 2.8188 2.5083 2.0739 1.7171 1.3212 0.6858 0 23 2.8073 2.4999 2.0687 1.7139 1.3195 0.6853 0 24 2.7969 2.4922 2.0639 1.7109 1.3178 0.6848 0 25 2.7874 2.4851 2.0595 1.7081 1.3163 0.6844 0 26 2.7787 2.4786 2.0555 1.7056 1.3150 0.6840 0 27 2.7707 2.4727 2.0518 1.7033 1.3137 0.6837 0 28 2.7633 2.4671 2.0484 1.7011 1.3125 0.6834 0 29 2.7564 2.4620 2.0452 1.6991 1.3114 0.6830 0 30 2.7500 2.4573 2.0423 1.6973 1.3104 0.6828 0 40 2.7045 2.4233 2.0211 1.6839 1.3031 0.6807 0 50 2.6778 2.4033 2.0086 1.6759 1.2987 0.6794 0 60 2.6603 2.3901 2.0003 1.6706 1.2958 0.6786 0 70 2.6479 2.3808 1.9944 1.6669 1.2938 0.6780 0 80 2.6387 2.3739 1.9901 1.6641 1.2922 0.6776 0 90 2.6316 2.3685 1.9867 1.6620 1.2910 0.6772 0 100 2.6259 2.3642 1.9840 1.6602 1.2901 0.6770 0 200 2.6006 2.3451 1.9719 1.6525 1.2858 0.6757 0 300 2.5923 2.3388 1.9679 1.6499 1.2844 0.6753 0 400 2.5882 2.3357 1.9659 1.6487 1.2837 0.6751 0 500 2.5857 2.3338 1.9647 1.6479 1.2832 0.6750 0 600 2.5840 2.3326 1.9639 1.6474 1.2830 0.6749 0 700 2.5829 2.3317 1.9634 1.6470 1.2828 0.6748 0 800 2.5820 2.3310 1.9629 1.6468 1.2826 0.6748 0 900 2.5813 2.3305 1.9626 1.6465 1.2825 0.6748 0 1000 2.5808 2.3301 1.9623 1.6464 1.2824 0.6747 0 16.3 \\(\\mathcal{X}^{2}_{n;\\,\\gamma}\\)-Verteilung ## Warning in attr(x, &quot;align&quot;): &#39;xfun::attr()&#39; is deprecated. ## Use &#39;xfun::attr2()&#39; instead. ## See help(&quot;Deprecated&quot;) Quantile \\(\\mathcal{X}^2_{n;\\,\\gamma}\\) der \\(\\mathcal{X}^2_n\\)-Verteilung Beispiel: \\(P(\\mathcal{X}^2_{10} \\leq 20.4832) = 0.975\\) \\(n \\setminus \\gamma\\) 0.995 0.99 0.975 0.95 0.9 0.75 0.5 0.25 0.1 0.05 0.01 0.005 1 7.8794 6.6349 5.0239 3.8415 2.7055 1.3233 0.4549 0.1015 0.0158 0.0039 0.0002 0.0000 2 10.5966 9.2103 7.3778 5.9915 4.6052 2.7726 1.3863 0.5754 0.2107 0.1026 0.0201 0.0100 3 12.8382 11.3449 9.3484 7.8147 6.2514 4.1083 2.3660 1.2125 0.5844 0.3518 0.1148 0.0717 4 14.8603 13.2767 11.1433 9.4877 7.7794 5.3853 3.3567 1.9226 1.0636 0.7107 0.2971 0.2070 5 16.7496 15.0863 12.8325 11.0705 9.2364 6.6257 4.3515 2.6746 1.6103 1.1455 0.5543 0.4117 6 18.5476 16.8119 14.4494 12.5916 10.6446 7.8408 5.3481 3.4546 2.2041 1.6354 0.8721 0.6757 7 20.2777 18.4753 16.0128 14.0671 12.0170 9.0371 6.3458 4.2549 2.8331 2.1673 1.2390 0.9893 8 21.9550 20.0902 17.5345 15.5073 13.3616 10.2189 7.3441 5.0706 3.4895 2.7326 1.6465 1.3444 9 23.5894 21.6660 19.0228 16.9190 14.6837 11.3888 8.3428 5.8988 4.1682 3.3251 2.0879 1.7349 10 25.1882 23.2093 20.4832 18.3070 15.9872 12.5489 9.3418 6.7372 4.8652 3.9403 2.5582 2.1559 11 26.7568 24.7250 21.9200 19.6751 17.2750 13.7007 10.3410 7.5841 5.5778 4.5748 3.0535 2.6032 12 28.2995 26.2170 23.3367 21.0261 18.5493 14.8454 11.3403 8.4384 6.3038 5.2260 3.5706 3.0738 13 29.8195 27.6882 24.7356 22.3620 19.8119 15.9839 12.3398 9.2991 7.0415 5.8919 4.1069 3.5650 14 31.3193 29.1412 26.1189 23.6848 21.0641 17.1169 13.3393 10.1653 7.7895 6.5706 4.6604 4.0747 15 32.8013 30.5779 27.4884 24.9958 22.3071 18.2451 14.3389 11.0365 8.5468 7.2609 5.2293 4.6009 16 34.2672 31.9999 28.8454 26.2962 23.5418 19.3689 15.3385 11.9122 9.3122 7.9616 5.8122 5.1422 17 35.7185 33.4087 30.1910 27.5871 24.7690 20.4887 16.3382 12.7919 10.0852 8.6718 6.4078 5.6972 18 37.1565 34.8053 31.5264 28.8693 25.9894 21.6049 17.3379 13.6753 10.8649 9.3905 7.0149 6.2648 19 38.5823 36.1909 32.8523 30.1435 27.2036 22.7178 18.3377 14.5620 11.6509 10.1170 7.6327 6.8440 20 39.9968 37.5662 34.1696 31.4104 28.4120 23.8277 19.3374 15.4518 12.4426 10.8508 8.2604 7.4338 21 41.4011 38.9322 35.4789 32.6706 29.6151 24.9348 20.3372 16.3444 13.2396 11.5913 8.8972 8.0337 22 42.7957 40.2894 36.7807 33.9244 30.8133 26.0393 21.3370 17.2396 14.0415 12.3380 9.5425 8.6427 23 44.1813 41.6384 38.0756 35.1725 32.0069 27.1413 22.3369 18.1373 14.8480 13.0905 10.1957 9.2604 24 45.5585 42.9798 39.3641 36.4150 33.1962 28.2412 23.3367 19.0373 15.6587 13.8484 10.8564 9.8862 25 46.9279 44.3141 40.6465 37.6525 34.3816 29.3389 24.3366 19.9393 16.4734 14.6114 11.5240 10.5197 26 48.2899 45.6417 41.9232 38.8851 35.5632 30.4346 25.3365 20.8434 17.2919 15.3792 12.1981 11.1602 27 49.6449 46.9629 43.1945 40.1133 36.7412 31.5284 26.3363 21.7494 18.1139 16.1514 12.8785 11.8076 28 50.9934 48.2782 44.4608 41.3371 37.9159 32.6205 27.3362 22.6572 18.9392 16.9279 13.5647 12.4613 29 52.3356 49.5879 45.7223 42.5570 39.0875 33.7109 28.3361 23.5666 19.7677 17.7084 14.2565 13.1211 30 53.6720 50.8922 46.9792 43.7730 40.2560 34.7997 29.3360 24.4776 20.5992 18.4927 14.9535 13.7867 40 66.7660 63.6907 59.3417 55.7585 51.8051 45.6160 39.3353 33.6603 29.0505 26.5093 22.1643 20.7065 50 79.4900 76.1539 71.4202 67.5048 63.1671 56.3336 49.3349 42.9421 37.6886 34.7643 29.7067 27.9907 60 91.9517 88.3794 83.2977 79.0819 74.3970 66.9815 59.3347 52.2938 46.4589 43.1880 37.4849 35.5345 70 104.2149 100.4252 95.0232 90.5312 85.5270 77.5767 69.3345 61.6983 55.3289 51.7393 45.4417 43.2752 80 116.3211 112.3288 106.6286 101.8795 96.5782 88.1303 79.3343 71.1445 64.2778 60.3915 53.5401 51.1719 90 128.2989 124.1163 118.1359 113.1453 107.5650 98.6499 89.3342 80.6247 73.2911 69.1260 61.7541 59.1963 100 140.1695 135.8067 129.5612 124.3421 118.4980 109.1412 99.3341 90.1332 82.3581 77.9295 70.0649 67.3276 150 198.3602 193.2077 185.8004 179.5806 172.5812 161.2912 149.3339 137.9829 128.2751 122.6918 112.6676 109.1422 200 255.2642 249.4451 241.0579 233.9943 226.0210 213.1022 199.3337 186.1717 174.8353 168.2786 156.4320 152.2410 250 311.3462 304.9396 295.6886 287.8815 279.0504 264.6970 249.3337 234.5768 221.8059 214.3916 200.9386 196.1606 300 366.8444 359.9064 349.8745 341.3951 331.7885 316.1384 299.3336 283.1353 269.0679 260.8781 245.9725 240.6634 400 476.6064 468.7245 457.3055 447.6325 436.6490 418.6969 399.3335 380.5767 364.2074 354.6410 337.1553 330.9028 600 692.9816 683.5156 669.7692 658.0936 644.8004 622.9876 599.3335 576.2859 556.0560 544.1801 522.3651 514.5289 800 906.7862 895.9843 880.2753 866.9114 851.6712 826.6040 799.3334 772.6694 749.1852 735.3623 709.8969 700.7250 1000 1118.9481 1106.9690 1089.5309 1074.6794 1057.7239 1029.7898 999.3334 969.4836 943.1326 927.5944 898.9124 888.5635 "],["gruppenarbeit.html", "Gruppenarbeit", " Gruppenarbeit Die Bewertung der Gruppenarbeiten erfolgt mit dem folgenden Formular: Download Beispielbogen Download Bewertungsformular "],["evaluation.html", "Evaluation", " Evaluation stats_ss2021 &lt;- tribble( ~date, ~vg, ~g, ~n, ~b, ~vb, ~total, &quot;07.04.2021&quot;,45,71,7,0,0,128, &quot;12.04.2021&quot;,24,63,10,0,0,119, &quot;14.04.2021&quot;,34,55,20,0,0,118, &quot;19.04.2021&quot;,15,54,12,2,0,97, &quot;26.04.2021&quot;,17,42,8,2,1,99, &quot;28.04.2021&quot;,55,38,13,1,0,115, &quot;05.05.2021&quot;,23,37,13,1,0,110 ) evcnames&lt;- c(&quot;Datum&quot;,&quot;sehr zufrieden&quot;, &quot;zufrieden&quot;, &quot;weder zufrieden noch unzufrieden&quot;, &quot;unzufrieden&quot;, &quot;sehr unzufrieden&quot;, &quot;anwesend&quot;) kable(stats_ss2021, booktabbs=T, col.names = evcnames) "],["system-info.html", "System Info", " System Info Sys.time() ## [1] &quot;2025-05-22 12:10:24 UTC&quot; sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.1 LTS ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so; LAPACK version 3.12.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## time zone: Etc/UTC ## tzcode source: system (glibc) ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] kableExtra_1.4.0 knitr_1.49 lubridate_1.9.4 forcats_1.0.0 ## [5] stringr_1.5.1 dplyr_1.1.4 purrr_1.0.2 readr_2.1.5 ## [9] tidyr_1.3.1 tibble_3.2.1 ggplot2_3.5.1 tidyverse_2.0.0 ## [13] fhswf_0.0.9 ## ## loaded via a namespace (and not attached): ## [1] gtable_0.3.6 jsonlite_1.8.9 compiler_4.4.2 tidyselect_1.2.1 ## [5] xml2_1.3.6 jquerylib_0.1.4 systemfonts_1.1.0 scales_1.3.0 ## [9] yaml_2.3.10 fastmap_1.2.0 R6_2.5.1 generics_0.1.3 ## [13] bookdown_0.41 munsell_0.5.1 svglite_2.1.3 bslib_0.8.0 ## [17] pillar_1.10.0 tzdb_0.4.0 rlang_1.1.4 stringi_1.8.4 ## [21] cachem_1.1.0 xfun_0.52 sass_0.4.9 viridisLite_0.4.2 ## [25] timechange_0.3.0 cli_3.6.3 withr_3.0.2 magrittr_2.0.3 ## [29] digest_0.6.37 grid_4.4.2 rstudioapi_0.17.1 hms_1.1.3 ## [33] lifecycle_1.0.4 vctrs_0.6.5 evaluate_1.0.1 glue_1.8.0 ## [37] colorspace_2.1-1 rmarkdown_2.29 tools_4.4.2 pkgconfig_2.0.3 ## [41] htmltools_0.5.8.1 Buchwitz, Benjamin. 2022. Fhswf: Fhswf. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
